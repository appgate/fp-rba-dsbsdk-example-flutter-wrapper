package com.appgate.dsbsdk

import android.app.Application
import com.appgate.dsbsdk.constants.DSBModulesNames
import com.google.gson.Gson
import io.flutter.plugin.common.MethodCall
import io.flutter.plugin.common.MethodChannel
import net.easysol.dsb.DSB

class MalwareProtectorPlugin(private val application: Application?) {

    private var sdk: DSB = DSB.sdk(application)

    fun startOverlappingProtection(result: MethodChannel.Result) {
        sdk.MALWARE_PROTECTOR_API.startOverlappingProtection(application)
        val value: MutableList<Boolean> = ArrayList(1)
        value.add(true)
        result.success(value)
    }

    fun configureOverlappingMalwareGUINotification(call: MethodCall, result: MethodChannel.Result) {
        val drawableId = call.argument<Int>(MALWARE_GUI_DRAWABLE_ID)
        val title = call.argument<String>(MALWARE_GUI_TITLE)
        val message = call.argument<String>(MALWARE_GUI_MESSAGE)
        sdk.MALWARE_PROTECTOR_API.configureOverlappingMalwareGUINotification(
            drawableId!!,
            title,
            message
        )
        val value: MutableList<Boolean> = ArrayList(1)
        value.add(true)
        result.success(value)
    }

    fun setOverlayListener(channel: MethodChannel) {
        sdk.MALWARE_PROTECTOR_API.setOverlayListener {
            channel.invokeMethod(DSBModulesNames.SET_OVERLAY_LISTENER.value,Gson().toJson(it))
        }

    }

    fun setOverlayGUINotificationEnable(call: MethodCall, result: MethodChannel.Result) {
        val notification = call.argument<Boolean>(GUI_NOTIFICATION_ENABLE)
        sdk.MALWARE_PROTECTOR_API.setOverlayGUINotificationEnable(notification!!)
        val value: MutableList<Boolean> = ArrayList(1)
        value.add(true)
        result.success(value)
    }

    fun setOverlayToastNotificationEnable(call: MethodCall, result: MethodChannel.Result) {
        val notification = call.argument<Boolean>(TOAST_NOTIFICATION)
        sdk.MALWARE_PROTECTOR_API.setOverlayToastNotificationEnable(notification!!)
        val value: MutableList<Boolean> = ArrayList(1)
        value.add(true)
        result.success(value)
    }

    fun configureOverlappingMalwareToastNotification(
        call: MethodCall,
        result: MethodChannel.Result
    ) {
        val notification = call.argument<String>(TOAST_MESSAGE_NOTIFICATION)
        sdk.MALWARE_PROTECTOR_API.configureOverlappingMalwareToastNotification(notification)
        val value: MutableList<Boolean> = ArrayList(1)
        value.add(true)
        result.success(value)
    }

    companion object {
        private const val GUI_NOTIFICATION_ENABLE: String = "GUINotification"
        private const val TOAST_NOTIFICATION: String = "ToastNotification"
        private const val TOAST_MESSAGE_NOTIFICATION: String = "ToastMessageNotification"
        private const val MALWARE_GUI_DRAWABLE_ID: String = "MalwareGUIDrawableId"
        private const val MALWARE_GUI_TITLE: String = "MalwareGUITitle"
        private const val MALWARE_GUI_MESSAGE: String = "MalwareGUIMessage"

    }
}